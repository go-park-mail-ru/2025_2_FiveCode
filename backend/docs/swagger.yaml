basePath: /api
definitions:
  handler.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.registerRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  store.Note:
    properties:
      favorite:
        type: boolean
      folder:
        type: string
      id:
        type: integer
      owner_id:
        type: integer
      text:
        type: string
      title:
        type: string
    type: object
  store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  description: API for web-site Goose
  title: Goose API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and set a session cookie
      parameters:
      - description: Login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handler.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /logout:
    post:
      description: Delete user's session and invalidate cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user (email, username, password). Returns created
        user on success.
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handler.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
  /session:
    get:
      description: Return user for current session cookie or null if not authenticated
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check current session
      tags:
      - auth
  /user/{user_id}/notes:
    get:
      consumes:
      - application/json
      description: Return list of notes owned by the specified user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - CookieAuth: []
      summary: List user notes
      tags:
      - notes
securityDefinitions:
  CookieAuth:
    in: header
    name: Cookie
    type: apiKey
swagger: "2.0"
